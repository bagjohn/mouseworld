
# coding: utf-8

# In[ ]:

get_ipython().run_cell_magic('writefile', 'mouseworld/check_consistence.py', "\nfrom mouseworld import mouseworld\nimport time\n\n# Build the model\nmodel = mouseworld.Mouseworld([0, 100, 0], 1, genome_range = [(0.2,0.2), (0,1), (0,1), (0.8,0.8), (0.4,0.4)], \n                 mouse_position = (45,45), food_position = (0,0),\n                 primary_values = [100, 0], secondary_values = [100, 0], \n                 food_amount_range = (10000,10000), nutritional_value = [1])\n\n# Gather initial randomly distributed data\nmodel.initial_datacollector.collect(model,model.schedule)\ninitial_model_data = model.initial_datacollector.get_model_vars_dataframe()\ninitial_model_data.to_csv('results/initial_model_data.csv', sep='\\t')\n\n# Prepare environment by stepping food and predators and diffusing odors\nfor i in range(10) :\n    model.food_schedule.step()\n    model.predator_schedule.step()\n    model.diffuse_odor_layers_parallel(model.odor_layers)\n\ncounter = 0\n# Run for discrete number of timesteps\nfor i in range(2) :\n    counter += 1\n    print('sim step : %i'%counter)\n    model.step()\n\n# Run until all mice perish\n# while model.num_mice > 0 :\n#     counter += 1\n#     print('sim step : %i'%counter)\n#     model.step()\n    \n# Gather final model and agent data\nmodel.final_datacollector.collect(model,model.all_mice_schedule)\nfinal_model_data = model.final_datacollector.get_model_vars_dataframe()\nfinal_model_data.to_csv('results/final_model_data.csv', sep='\\t')\nfinal_agent_data = model.final_datacollector.get_agent_vars_dataframe()\nfinal_agent_data.to_csv('results/final_agent_data.csv', sep='\\t')\n\n# Gather test model and agent data\ntest_agent_data = model.test_datacollector.get_agent_vars_dataframe()\ntest_agent_data.to_csv('results/test_agent_data.csv', sep='\\t')")

